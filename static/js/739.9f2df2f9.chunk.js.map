{"version":3,"file":"static/js/739.9f2df2f9.chunk.js","mappings":"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","sources":["components/Loaders/ContactLoader.jsx","components/ContactForm/ContactForm.jsx","redux/filter/selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","utils/getFilteredContacts.js","components/Filter/Filter.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","pages/Contacts.jsx"],"sourcesContent":["import { MutatingDots  } from 'react-loader-spinner';\nimport { Box } from \"../Box\";\n\nconst ContactLoader = () => {\n    return (\n        <Box\n              position=\"absolute\"\n              top=\"50%\"\n              left=\"47%\"\n          >\n         <MutatingDots \n            height=\"100\"\n            width=\"100\"\n            color=\"#3f51b5\"\n            secondaryColor= '#3f51b5'\n            radius='12.5'\n            ariaLabel=\"mutating-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            />\n        </Box>\n\n    )\n}\n\nexport default ContactLoader","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useEffect, useState } from \"react\";\nimport { Box } from 'components/Box';\nimport { useGetContactsQuery, useCreateContactMutation } from 'redux/contacts/slice';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport ContactLoader from '../Loaders/ContactLoader'\n\nconst ContactForm = () => {\n\n    const [createContact, { isLoading, isSuccess}] = useCreateContactMutation();\n    const { data: contacts } = useGetContactsQuery();\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleInputChange = e => {\n        const { name, value } = e.target;\n        switch (name) {\n            case \"name\":\n                setName(value)\n                break;\n        \n            case \"number\":\n                setNumber(value)\n                break;\n            default:\n                return;\n        }\n    };\n\n    const onSubmitContact = ({ name, number }) => {       \n        contacts.some(contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase())\n            ? Notify.failure(`${name} is already in contacts`)\n            : createContact({ name, number }) && resetForm();\n    };\n\n\n    const onClickSubmit = (evt) => {\n        evt.preventDefault();\n        \n        onSubmitContact({ name, number });\n    };\n\n    const resetForm = () => {\n        setName(\"\");\n        setNumber(\"\");\n    };\n  \n    useEffect(() => {\n        if (isSuccess) {\n        Notify.success(`Contact was created.`);\n        };\n    }, [isSuccess]);\n\n    return (\n        <>\n                <Box\n                    as=\"form\"\n                    onSubmit={onClickSubmit}\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    p={4}\n                    alignItems=\"center\"\n                >\n              \n                <TextField \n                    margin=\"normal\"\n                    label=\"Contact's name\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces.\n                                For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    variant=\"standard\"\n                    type=\"name\"\n                    name=\"name\"\n                    value={name} onChange={handleInputChange}\n                    required /> \n              \n                <TextField \n                    margin=\"normal\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    label=\"Contact's number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    variant=\"standard\"\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleInputChange}\n                    required />\n              \n                <Button variant=\"contained\" type=\"submit\">Add contact</Button>\n                {isLoading && <ContactLoader/>}\n                    </Box>\n        </>\n    );\n};\n\nexport default ContactForm;\n\n\n","export const selectFilter = state => state.filter;","import styled from \"styled-components\";\n\nexport const ContactOrder = styled.ul`\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    margin-top: -5px;\n    margin-left: -5px;\n`\nexport const ContactLi = styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border: 1px solid #1976d2;\n    border-radius: 4px;\n    flex-basis: calc((100% - 10px) / 4);\n    padding: ${p => p.theme.space[4]}px;\n    margin-top: 10px;\n    margin-left: 10px;\n`","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Notify } from \"notiflix\";\nimport Button from '@mui/material/Button';\nimport { ContactLi } from '../ContactList/ContactList.styled';\nimport { useDeleteContactMutation } from 'redux/contacts/slice';\n\n\nexport const ContactItem = ({ id, name, number }) => {\n\n    const [deleteContact, { isLoading, isSuccess }] = useDeleteContactMutation();\n\n    useEffect(() => {\n        if (isSuccess) {\n            Notify.failure(`Contact was removed.`);\n        };\n    }, [isSuccess]);\n    \n    return (\n        <ContactLi>\n            <p>{name}: {number}</p>\n            <Button variant=\"outlined\"\n                color=\"error\"\n                onClick={() => {deleteContact(id)}}\n                disabled={isLoading}\n            >\n                {isLoading\n                    ? <span>Removing</span>\n                    : <span>Remove</span>\n                }\n            </Button>\n        </ContactLi>\n    )\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};","import { Box } from 'components/Box';\nimport { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { ContactOrder } from './ContactList.styled';\nimport { useGetContactsQuery } from 'redux/contacts/slice';\nimport { showCurrentContacts } from 'utils/getFilteredContacts';\nimport { useEffect } from 'react';\nimport { ContactItem } from '../ContactItem/ContactItem'\n\n\nconst ContactList = () => {\n    const filter = useSelector(selectFilter);\n    const { data, isLoading, error, refetch  } = useGetContactsQuery();\n    console.log(data)\n    useEffect(() => {\n        refetch();\n    }, [refetch]);\n    \nconst currentContacts = showCurrentContacts(filter, data);\n\n    return (\n        <Box pl={6} pr={6}>\n            <ContactOrder>\n                {!isLoading && !error && currentContacts.map(((contact) => {\n                    return (\n                        <ContactItem key={contact.id} {...contact} />\n                    )\n                }))}\n            </ContactOrder>\n        </Box>)\n};\n    \nexport default ContactList;","export const showCurrentContacts = (filter, contacts) => {\n  if (!filter) {\n    return contacts;\n  };\n  const adjustedFilter = filter.toLocaleLowerCase();\n  \n  const currentContacts = contacts.filter(({ name }) =>\n    name.toLocaleLowerCase().includes(adjustedFilter));\n\n  return currentContacts;\n};","\nimport { Box } from 'components/Box';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport TextField from '@mui/material/TextField';\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    \n    const handleInputName = (evt) => {\n        dispatch(setFilter(evt.target.value))\n    };\n    const filter = useSelector(selectFilter)\n\n    return (<Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        p={4}\n        alignItems=\"center\"\n    >\n        <label> \n            <TextField\n                id=\"filled-basic\" label=\"Find contacts by name\" variant=\"filled\"\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n                onChange={handleInputName}\n            />\n        </label>\n    </Box>)\n};\n\n\nexport default Filter;","import styled from 'styled-components';\n\nexport const StyledTitle = styled.h2`\n    font-size: ${p => p.theme.fontSizes.l};\n    text-align: center;\n    margin-top: ${p => p.theme.space[5]}px;\n    margin-left: ${p => p.theme.space[5]}px;\n`\n","import PropTypes from 'prop-types';\nimport { StyledTitle } from './Title.styled';\n\nconst Title = ({ text }) => <StyledTitle>{text}</StyledTitle>\n\nTitle.propTypes = {\n    text: PropTypes.string.isRequired,\n};\n\nexport default Title;","import ContactForm from 'components/ContactForm';\nimport ContactList from \"components/ContactList\";\nimport Filter from \"components/Filter\";\nimport Title from \"components/Title\";\nimport { Box } from \"components/Box\";\n\nconst Contacts = () => {\n    return (\n    <>\n        <Box>\n            <Title text=\"Phonebook\" />\n            <ContactForm />\n            <Title text=\"Contacts\" />\n            <Filter />\n            <ContactList />\n        </Box>\n    </>\n    )\n};\n\nexport default Contacts;"],"names":["Box","position","top","left","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","useCreateContactMutation","createContact","isLoading","isSuccess","contacts","useGetContactsQuery","data","useState","name","setName","number","setNumber","handleInputChange","e","target","value","resetForm","useEffect","Notify","as","onSubmit","evt","preventDefault","some","contact","toLocaleLowerCase","onSubmitContact","display","flexDirection","p","alignItems","TextField","margin","label","title","variant","type","onChange","required","pattern","Button","selectFilter","state","filter","ContactOrder","styled","ContactLi","theme","space","ContactItem","id","useDeleteContactMutation","deleteContact","onClick","disabled","useSelector","error","refetch","console","log","currentContacts","adjustedFilter","includes","showCurrentContacts","pl","pr","map","dispatch","useDispatch","setFilter","StyledTitle","fontSizes","l","text"],"sourceRoot":""}